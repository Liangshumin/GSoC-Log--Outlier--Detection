,pattern_id,pattern
0,0,"<*> (ReplicatedMergeTreeCleanupThread): void DB::ReplicatedMergeTreeCleanupThread::run(): Code: <*>, e.displayText() = Coordination::Exception: Connection loss, path:<*>, Stack trace (when copying this message, always include the lines below):"
1,1,"<*> (ReplicatedMergeTreeCleanupThread): void DB::ReplicatedMergeTreeCleanupThread::run(): Code: <*>, e.displayText() = Coordination::Exception: Session expired (Session expired), Stack trace (when copying this message, always include the lines below):"
2,2,"<*> (ReplicatedMergeTreeRestartingThread): void DB::ReplicatedMergeTreeRestartingThread::run(): Code: <*>, e.displayText() = Coordination::Exception: All connection tries failed while connecting to ZooKeeper. nodes: <*>"
3,3,"<*> (StorageReplicatedMergeTree): DB::StorageReplicatedMergeTree::queueTask()::<lambda(DB::StorageReplicatedMergeTree::LogEntryPtr&)>: Poco::Exception. Code: <*>, e.code() = <*>, e.displayText() = No message received, e.what() = No message received"
4,4,"<*>: Code: <*>, e.displayText() = DB::Exception: Cannot swap part <*>, no such active part., Stack trace (when copying this message, always include the lines below):"
5,5,"<*>: Code: <*>, e.displayText() = DB::Exception: default: Authentication failed: password is incorrect or there is no user with such name, Stack trace (when copying this message, always include the lines below):"
6,6,"<*>: Code: <*>, e.displayText() = DB::Exception: Path <*> already exists. Can not clone , Stack trace (when copying this message, always include the lines below):"
7,7,"<*>: Code: <*>, e.displayText() = DB::Exception: Syntax error: failed at position <*> ('.') (line <*>, col <*>): <*>"
8,8,"<*>: DB::StorageReplicatedMergeTree::queueTask()::<lambda(DB::StorageReplicatedMergeTree::LogEntryPtr&)>: Code: <*>, e.displayText() = Coordination::Exception: Connection loss, path: <*>, Stack trace (when copying this message, always include the lines below):"
9,9,"<*>: DB::StorageReplicatedMergeTree::queueTask()::<lambda(DB::StorageReplicatedMergeTree::LogEntryPtr&)>: Code: <*>, e.displayText() = DB::Exception: Cannot reserve <*>, not enough space, Stack trace (when copying this message, always include the lines below):"
10,10,"<*>: Poco::Exception. Code: <*>, e.code() = <*>, e.displayText() = File access error: no space left on device: <*>, Stack trace (when copying this message, always include the lines below):"
11,11,"<*>: void DB::StorageReplicatedMergeTree::<*>(): Code: <*>, e.displayText() = Coordination::Exception: Session expired (Session expired), Stack trace (when copying this message, always include the lines below):"
12,12,"<*>: void DB::StorageReplicatedMergeTree::mergeSelectingTask(): Code: <*>, e.displayText() = Coordination::Exception: Connection loss, path:<*>, Stack trace (when copying this message, always include the lines below):"
13,13,"<*>: void DB::StorageReplicatedMergeTree::mutationsUpdatingTask(): <*> [ <*> ] {} <Error> <*>: void DB::StorageReplicatedMergeTree::mutationsUpdatingTask(): Code: <*>, e.displayText() = Coordination::Exception: Session expired (Session expired), Stack trace (when copying this message, always include the lines below):"
14,14,"ConnectionPoolWithFailover: <*>, reason: Code: <*>, e.displayText() = DB::NetException: Timeout: connect timed out: <*> (<*>) (version <*>)"
15,15,"ConnectionPoolWithFailover: <*>, reason: Code: <*>, e.displayText() = DB::NetException: Connection refused (<*>) (version <*>)"
16,16,"ConnectionPoolWithFailover: <*>, reason: Code: <*>, e.displayText() = DB::Exception: Attempt to read after eof (version <*>)"
17,17,"DynamicQueryHandler: Cannot send exception to client: Code: <*>, e.displayText() = DB::Exception: Cannot write to ostream at offset <*>, Stack trace (when copying this message, always include the lines below):"
18,18,"DynamicQueryHandler: Code: <*>, e.displayText() = DB::Exception: Cannot allocate block number in ZooKeeper: Coordination::Exception: Connection loss, path: <*>, Stack trace (when copying this message, always include the lines below):"
19,19,"DynamicQueryHandler: Code: <*>, e.displayText() = DB::Exception: Cannot allocate block number in ZooKeeper: Coordination::Exception: Connection loss, Stack trace (when copying this message, always include the lines below):"
20,20,"DynamicQueryHandler: Code: <*>, e.displayText() = DB::Exception: Cannot reserve <*>, not enough space, Stack trace (when copying this message, always include the lines below):"
21,21,"DynamicQueryHandler: Code: <*>, e.displayText() = DB::Exception: Table <*> exists., Stack trace (when copying this message, always include the lines below):"
22,22,"DynamicQueryHandler: Code: <*>, e.displayText() = DB::Exception: Table <*> doesn't exist., Stack trace (when copying this message, always include the lines below):"
23,23,"DynamicQueryHandler: Code: <*>, e.displayText() = DB::Exception: Database rabbit doesn't exist, Stack trace (when copying this message, always include the lines below):"
24,24,"DynamicQueryHandler: Code: <*>, e.displayText() = DB::Exception: Table is in readonly mode (zookeeper path: <*>), Stack trace (when copying this message, always include the lines below):"
25,25,"DynamicQueryHandler: Code: <*>, e.displayText() = DB::Exception: ZooKeeper session has been expired., Stack trace (when copying this message, always include the lines below):"
26,26,"DynamicQueryHandler: Code: <*>, e.displayText() = DB::Exception: Syntax error: failed at position <*> (end of query): . Expected one of: <*>, Stack trace (when copying this message, always include the lines below):"
27,27,"executeQuery: Code: <*>, e.displayText() = DB::Exception: Attempt to read after eof, e.what() = DB::Exception (from <*>) (in query: <*>, Stack trace:"
28,28,"executeQuery: Code: <*>, e.displayText() = DB::Exception: Cannot allocate block number in ZooKeeper: Coordination::Exception: Connection loss (version <*>) (from <*>) (in query: <*>, Stack trace (when copying this message, always include the lines below):"
29,29,"executeQuery: Code: <*>, e.displayText() = DB::Exception: Cannot allocate block number in ZooKeeper: Coordination::Exception: Connection loss, path: <*>(version <*>) (from <*>) (in query: <*>, Stack trace (when copying this message, always include the lines below):"
30,30,"executeQuery: Code: <*>, e.displayText() = DB::Exception: Cannot reserve <*>, not enough space (version <*>) (from <*>) (in query: <*>, Stack trace (when copying this message, always include the lines below):"
31,31,"executeQuery: Code: <*>, e.displayText() = DB::Exception: Database rabbit doesn't exist (version <*>) (from <*>) (in query: <*>, Stack trace (when copying this message, always include the lines below):"
32,32,"executeQuery: Code: <*>, e.displayText() = DB::Exception: Syntax error: failed at position <*> (end of query): . Expected one of: <*>(version <*>) (from <*>) (in query: <*>, Stack trace (when copying this message, always include the lines below):"
33,33,"executeQuery: Code: <*>, e.displayText() = DB::Exception: Table <*> already exists. (version <*>) (from <*>) (in query: <*>, Stack trace (when copying this message, always include the lines below):"
34,34,"executeQuery: Code: <*>, e.displayText() = DB::Exception: ZooKeeper session has been expired. (version <*>) (from <*>) (in query: <*>, Stack trace (when copying this message, always include the lines below):"
35,35,"executeQuery: Code: <*>, e.displayText() = DB::NetException: Connection reset by peer, while writing to socket (<*>), e.what() = DB::NetException (from <*>) (in query: <*>, Stack trace:"
36,36,"executeQuery: Code: <*>, e.displayText() = DB::NetException: I/O error: Broken pipe, while writing to socket (<*>), e.what() = DB::NetException (from <*>) (in query: <*>, Stack trace:"
37,37,"executeQuery: Code: <*>, e.displayText() = DB::Exception: Table is in readonly mode (zookeeper path: <*>) (version <*>) (from <*>) (in query: <*>, Stack trace (when copying this message, always include the lines below):"
38,38,"executeQuery: Code: <*>, e.displayText() = DB::Exception: Table <*> exist. (version <*>) (from <*>) (in query: <*>, Stack trace (when copying this message, always include the lines below):"
39,39,"executeQuery: Code: <*>, e.displayText() = DB::Exception: Syntax error: failed at position <*>: <*> Expected non-empty parenthesized list of expressions, e.what() = DB::Exception (from <*>) (in query: <*>, Stack trace:"
40,40,"executeQuery: Code: <*>, e.displayText() = DB::NetException: Unknown packet from client, e.what() = DB::NetException (from <*>) (in query: <*>, Stack trace:"
41,41,"InterserverIOHTTPHandler: Code: <*>, e.displayText() = DB::Exception: Cannot write to ostream at offset <*>, Stack trace (when copying this message, always include the lines below):"
42,42,"ServerErrorHandler: Code: <*>, e.displayText() = DB::NetException: Connection reset by peer, while reading from socket (<*>), e.what() = DB::NetException, Stack trace:"
43,43,"ServerErrorHandler: Code: <*>, e.displayText() = DB::NetException: Unknown packet from client, e.what() = DB::NetException, Stack trace:"
44,44,"ServerErrorHandler: Poco::Exception. Code: <*>, e.code() = <*>, e.displayText() = I/O error: Broken pipe, Stack trace (when copying this message, always include the lines below):"
45,45,"ServerErrorHandler: Poco::Exception. Code: <*>, e.code() = <*>, e.displayText() = Net Exception: Socket is not connected, Stack trace (when copying this message, always include the lines below):"
46,46,"void Coordination::ZooKeeper::finalize(bool, bool): Poco::Exception. Code: <*>, e.code() = <*>, e.displayText() = Net Exception: Socket is not connected, Stack trace (when copying this message, always include the lines below):"
47,47,"void Coordination::ZooKeeper::receiveThread(): Code: <*>, e.displayText() = <*>, Stack trace (when copying this message, always include the lines below):"
48,48,"void Coordination::ZooKeeper::receiveThread(): Code: <*>, e.displayText() = DB::Exception: Cannot read all data. Bytes read: <*>. Bytes expected: <*>, Stack trace (when copying this message, always include the lines below):"
49,49,"void DB::BackgroundProcessingPool::workLoopFunc(): Code: <*>, e.displayText() = DB::Exception: Not enough space for merging parts, Stack trace (when copying this message, always include the lines below):"
50,50,"void DB::DDLWorker::runMainThread(): Code: <*>, e.displayText() = Coordination::Exception: All connection tries failed while connecting to ZooKeeper. nodes: <*>"
51,51,"void DB::SystemLog<LogElement>::flushImpl(const std::__1::vector<_Tp>&, uint64_t) [with LogElement = DB::<*>; uint64_t = long unsigned int]: Code: <*>, e.displayText() = DB::Exception: Cannot reserve <*>, not enough space, Stack trace (when copying this message, always include the lines below):"
52,52,"zkutil::EphemeralNodeHolder::~EphemeralNodeHolder(): Code: <*>, e.displayText() = Coordination::Exception: Session expired (Session expired), Stack trace (when copying this message, always include the lines below):"
53,53,<*> (ReplicatedMergeTreePartCheckThread): Checking data of part <*>
54,54,<*> (ReplicatedMergeTreePartCheckThread): Checking if anyone has a part covering <*>
55,55,<*> (ReplicatedMergeTreePartCheckThread): Checking part <*>
56,56,<*> (ReplicatedMergeTreePartCheckThread): Found part <*> on <*> that covers the missing part <*>
57,57,<*> (ReplicatedMergeTreePartCheckThread): Found parts with the same min block and with the same max block as the missing part <*> Hoping that it will eventually appear as a result of a merge.
58,58,<*> (ReplicatedMergeTreePartCheckThread): No replica has part covering <*> and a merge is impossible: we didn't find a smaller part with the same min block.
59,59,<*> (ReplicatedMergeTreePartCheckThread): No replica has part covering <*> and a merge is impossible: we didn't find smaller parts with either the same min block or the same max block.
60,60,<*> (ReplicatedMergeTreePartCheckThread): Part <*> is lost forever.
61,61,<*> (ReplicatedMergeTreePartCheckThread): We have part <*> covering part <*>
62,62,<*> (ReplicatedMergeTreeRestartingThread): ZooKeeper session has expired. Switching to a new session.
63,63,"<*>: It looks like the table <*> was created by another server at the same moment, will retry"
64,64,<*>: Removing locally missing part from ZooKeeper and queueing a fetch: <*>
65,65,Application: DB::Exception: Effective user of the process (root) does not match the owner of the data (<*>). Run under '<*>'.
66,66,BaseDaemon: <*>
67,67,StorageDistributed (<*>): Name of remote database is empty. Default database will be used implicitly.
68,68,TCPHandler: Client has gone away.
69,69,TCPHandler: Client has not sent any data.
